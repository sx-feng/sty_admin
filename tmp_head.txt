<template>
  <div class="user-manage-page">
    <!-- È°µÈù¢Ê†áÈ¢ò -->
    <div class="page-header">
      <h2>üë• Áî®Êà∑ÁÆ°ÁêÜ</h2>
      <el-button type="primary" @click="getUserList" :loading="loading">Âà∑Êñ∞</el-button>
    </div>

    <!-- Áî®Êà∑ÂàóË°® -->
    <el-table
      :data="tableData"
      border
      style="width: 100%"
      v-loading="loading"
    >
      <el-table-column type="index" label="ID" />
      <el-table-column prop="userName" label="Áî®Êà∑Âê? />
      <el-table-column prop="realName" label="ÁúüÂÆûÂßìÂêç" />
      <el-table-column prop="bankName" label="Èì∂Ë°åÂêçÁß∞" />
      <el-table-column prop="bankBranch" label="ÂºÄÊà∑Ë°å" />
      <el-table-column prop="bankCard" label="Èì∂Ë°åÂç°Âè∑" />
      <el-table-column prop="ifOut" label="ÁêÜË¥¢ÊùÉÈôê" width="120">
        <template #default="{ row }">
          <el-tag :type="isPermitted(row.ifOut) ? 'success' : 'info'">
            {{ isPermitted(row.ifOut) ? 'ÊúâÊùÉÈô? : 'Êó†ÊùÉÈô? }}
          </el-tag>
        </template>
      </el-table-column>
       <el-table-column prop="balance" label="‰ΩôÈ¢ù" />
      <el-table-column prop="creditScore" label="‰ø°Áî®Âà? />

      <!-- ÂÜªÁªìÁä∂ÊÄ?-->
      <el-table-column prop="isFrozen" label="ÂÜªÁªìÁä∂ÊÄ? width="120">
        <template #default="{ row }">
          <el-tag :type="row.isFrozen ? 'danger' : 'success'">
            {{ row.isFrozen ? 'ÂÜªÁªì' : 'Ê≠£Â∏∏' }}
          </el-tag>
        </template>
      </el-table-column>

      <el-table-column prop="createTime" label="Ê≥®ÂÜåÊó∂Èó¥" width="160" />
      <el-table-column prop="updateTime" label="Êõ¥Êñ∞Êó∂Èó¥" width="160" />

      <!-- Êìç‰ΩúÂà?-->
      <el-table-column label="Êìç‰Ωú" width="320">
        <template #default="scope">
          <el-button size="small" @click="openEditDialog(scope.row)">ÁºñËæë</el-button>
          <el-button size="small" type="success" @click="openRechargeDialog(scope.row)">ÂÖÖÂÄ?/el-button>
          <el-button size="small" type="warning" @click="openReduceDialog(scope.row)">Êâ£Ê¨æ</el-button>

          <el-button
            size="small"
            :type="scope.row.isFrozen ? 'primary' : 'danger'"
            @click="toggleFreeze(scope.row)"
          >
            {{ scope.row.isFrozen ? 'Ëß£ÂÜª' : 'ÂÜªÁªì' }}
          </el-button>

          <el-button size="small" type="danger" @click="deleteUser(scope.row)">Âà†Èô§</el-button>
        </template>
      </el-table-column>
    </el-table>

    <!-- ÂàÜÈ°µ -->
    <div class="pagination">
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        :page-size="pageSize"
        @current-change="handlePageChange"
      />
    </div>

    <!-- ÁºñËæëÁî®Êà∑ÂºπÁ™ó -->
    <el-dialog v-model="editDialogVisible" title="ÁºñËæëÁî®Êà∑‰ø°ÊÅØ" width="500px">
      <el-form :model="editForm" label-width="100px" label-position="left">
        <el-form-item label="Áî®Êà∑Âê?>
          <el-input v-model="editForm.userName" />
        </el-form-item>

        <el-form-item label="ÁúüÂÆûÂßìÂêç">
          <el-input v-model="editForm.realName" />
        </el-form-item>

        <el-form-item label="Èì∂Ë°åÂêçÁß∞">
          <el-input v-model="editForm.bankName" />
        </el-form-item>

        <el-form-item label="ÂºÄÊà∑Ë°å">
          <el-input v-model="editForm.bankBranch" />
        </el-form-item>

        <el-form-item label="Èì∂Ë°åÂç°Âè∑">
          <el-input v-model="editForm.bankCard" />
        </el-form-item>

        <el-form-item label="‰ΩôÈ¢ù">
          <el-input-number v-model="editForm.balance" :min="0" />
        </el-form-item>

        <el-form-item label="‰ø°Áî®Âà?>
          <el-input-number v-model="editForm.creditScore" :min="0" />
        </el-form-item>

        <el-form-item label="ÁêÜË¥¢ÊùÉÈôê">
          <el-switch
            v-model="editForm.ifOut"
            :active-value="ifOutTrue"
            :inactive-value="ifOutFalse"
            active-text="ÊúâÊùÉÈô?
            inactive-text="Êó†ÊùÉÈô?
          />
        </el-form-item>

        <el-form-item label="ÊòØÂê¶ÂÜªÁªì">
          <el-switch
            v-model="editForm.isFrozen"
            active-text="ÂÜªÁªì"
            inactive-text="Ê≠£Â∏∏"
          />
        </el-form-item>

        <el-form-item label="Ê≥®ÂÜåÊó∂Èó¥">
          <el-input v-model="editForm.createTime" disabled />
        </el-form-item>

        <el-form-item label="Êõ¥Êñ∞Êó∂Èó¥">
          <el-input v-model="editForm.updateTime" disabled />
        </el-form-item>
      </el-form>

      <template #footer>
        <el-button @click="editDialogVisible = false">ÂèñÊ∂à</el-button>
        <el-button type="primary" @click="saveUserInfo">‰øùÂ≠ò</el-button>
      </template>
    </el-dialog>

    <!-- ÂÖÖÂÄ?Êâ£Ê¨æÂºπÁ™ó -->
    <el-dialog v-model="amountDialogVisible" :title="dialogTitle" width="400px">
      <el-form :model="amountForm" label-width="80px">
        <el-form-item label="Áî®Êà∑">
          <el-input v-model="amountForm.user" disabled />
        </el-form-item>
        <el-form-item label="ÈáëÈ¢ù">
          <el-input-number v-model="amountForm.amount" :min="1" />
        </el-form-item>
      </el-form>
      <template #footer>
        <el-button @click="amountDialogVisible = false">ÂèñÊ∂à</el-button>
        <el-button type="primary" @click="submitAmount">Á°ÆËÆ§</el-button>
      </template>
    </el-dialog>
  </div>
</template>

<script setup>
import { ref, onMounted } from 'vue'
import { ElMessage, ElMessageBox } from 'element-plus'
import { request } from '@/api/request'

// Êï∞ÊçÆ
const loading = ref(false)
const tableData = ref([])
const total = ref(0)
const pageSize = 10
const currentPage = ref(1)

// ÂºπÁ™óÁä∂ÊÄ?
const editDialogVisible = ref(false)
const amountDialogVisible = ref(false)
const dialogTitle = ref('')
const editForm = ref({})
const amountForm = ref({})

// ===== Ëé∑ÂèñÁî®Êà∑ÂàóË°® =====
async function getUserList() {
  loading.value = true
  const res = await request(0, '/api/admin/user/list', { page: currentPage.value, size: pageSize })
  loading.value = false
  if (!res.ok) return ElMessage.error(res.message || 'Âä†ËΩΩÂ§±Ë¥•')
  console.log(res.data)
  tableData.value = res.data?.records || res.data || []
  total.value = res.data?.total || 0
}

// ===== ÁºñËæëÁî®Êà∑‰ø°ÊÅØ =====
function openEditDialog(row) {
  editForm.value = {
    ...row,
    balance: Number(row.balance) || 0,
  }
  editDialogVisible.value = true
}


async function saveUserInfo() {
  const res = await request(1, '/api/admin/user/update', editForm.value)
  if (res.ok) {
    ElMessage.success('‰øÆÊîπÊàêÂäü')
    editDialogVisible.value = false
    getUserList()
  } else {
    ElMessage.error(res.message || '‰øÆÊîπÂ§±Ë¥•')
  }
}

// ===== ÂÜªÁªì / Ëß£ÂÜª =====
async function toggleFreeze(row) {
  const newState = !row.isFrozen
  const text = newState ? 'ÂÜªÁªì' : 'Ëß£ÂÜª'

  const confirm = await ElMessageBox.confirm(
    `Á°ÆÂÆöË¶?{text}Áî®Êà∑„Ä?{row.userName}„ÄçÂêóÔºü`,
    'ÊèêÁ§∫',
    { type: 'warning' }
  ).catch(() => false)

  if (!confirm) return

